// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`SkirtSelector Should match snapshot 1`] = `
ShallowWrapper {
  "length": 1,
  Symbol(enzyme.__root__): [Circular],
  Symbol(enzyme.__unrendered__): <SkirtSelector
    alt="skirt1"
    defaultChecked={true}
    height="70"
    id="skirt1"
    imageSrc="test"
    onClick={[MockFunction]}
    width="45"
  />,
  Symbol(enzyme.__renderer__): Object {
    "batchedUpdates": [Function],
    "getNode": [Function],
    "render": [Function],
    "simulateEvent": [Function],
    "unmount": [Function],
  },
  Symbol(enzyme.__node__): Object {
    "instance": null,
    "key": undefined,
    "nodeType": "host",
    "props": Object {
      "children": Array [
        <label
          htmlFor="skirt1"
        >
          <img
            alt="skirt1"
            height="70"
            src="test"
            width="45"
          />
        </label>,
        <input
          defaultChecked={true}
          id="skirt1"
          name="skirt"
          onClick={[MockFunction]}
          type="radio"
        />,
      ],
    },
    "ref": null,
    "rendered": Array [
      Object {
        "instance": null,
        "key": undefined,
        "nodeType": "host",
        "props": Object {
          "children": <img
            alt="skirt1"
            height="70"
            src="test"
            width="45"
          />,
          "htmlFor": "skirt1",
        },
        "ref": null,
        "rendered": Object {
          "instance": null,
          "key": undefined,
          "nodeType": "host",
          "props": Object {
            "alt": "skirt1",
            "height": "70",
            "src": "test",
            "width": "45",
          },
          "ref": null,
          "rendered": null,
          "type": "img",
        },
        "type": "label",
      },
      Object {
        "instance": null,
        "key": undefined,
        "nodeType": "host",
        "props": Object {
          "defaultChecked": true,
          "id": "skirt1",
          "name": "skirt",
          "onClick": [MockFunction],
          "type": "radio",
        },
        "ref": null,
        "rendered": null,
        "type": "input",
      },
    ],
    "type": "p",
  },
  Symbol(enzyme.__nodes__): Array [
    Object {
      "instance": null,
      "key": undefined,
      "nodeType": "host",
      "props": Object {
        "children": Array [
          <label
            htmlFor="skirt1"
          >
            <img
              alt="skirt1"
              height="70"
              src="test"
              width="45"
            />
          </label>,
          <input
            defaultChecked={true}
            id="skirt1"
            name="skirt"
            onClick={[MockFunction]}
            type="radio"
          />,
        ],
      },
      "ref": null,
      "rendered": Array [
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "host",
          "props": Object {
            "children": <img
              alt="skirt1"
              height="70"
              src="test"
              width="45"
            />,
            "htmlFor": "skirt1",
          },
          "ref": null,
          "rendered": Object {
            "instance": null,
            "key": undefined,
            "nodeType": "host",
            "props": Object {
              "alt": "skirt1",
              "height": "70",
              "src": "test",
              "width": "45",
            },
            "ref": null,
            "rendered": null,
            "type": "img",
          },
          "type": "label",
        },
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "host",
          "props": Object {
            "defaultChecked": true,
            "id": "skirt1",
            "name": "skirt",
            "onClick": [MockFunction],
            "type": "radio",
          },
          "ref": null,
          "rendered": null,
          "type": "input",
        },
      ],
      "type": "p",
    },
  ],
  Symbol(enzyme.__options__): Object {
    "adapter": ReactSixteenAdapter {
      "options": Object {
        "enableComponentDidUpdateOnSetState": true,
      },
    },
  },
}
`;
