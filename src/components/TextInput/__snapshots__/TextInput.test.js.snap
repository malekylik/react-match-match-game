// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`TextInput Should match snapshot 1`] = `
ShallowWrapper {
  "length": 1,
  Symbol(enzyme.__root__): [Circular],
  Symbol(enzyme.__unrendered__): <TextInput
    id="test"
    isRequired={true}
    labelText="test"
    name="test"
    onChange={[MockFunction]}
    placeholder="test"
    type="text"
    value="test"
  />,
  Symbol(enzyme.__renderer__): Object {
    "batchedUpdates": [Function],
    "getNode": [Function],
    "render": [Function],
    "simulateEvent": [Function],
    "unmount": [Function],
  },
  Symbol(enzyme.__node__): Object {
    "instance": null,
    "key": undefined,
    "nodeType": "host",
    "props": Object {
      "children": Array [
        <label
          htmlFor="test"
        >
          test
        </label>,
        <br />,
        <input
          id="test"
          name="test"
          onChange={[MockFunction]}
          placeholder="test"
          required={true}
          type="text"
          value="test"
        />,
      ],
    },
    "ref": null,
    "rendered": Array [
      Object {
        "instance": null,
        "key": undefined,
        "nodeType": "host",
        "props": Object {
          "children": "test",
          "htmlFor": "test",
        },
        "ref": null,
        "rendered": "test",
        "type": "label",
      },
      Object {
        "instance": null,
        "key": undefined,
        "nodeType": "host",
        "props": Object {},
        "ref": null,
        "rendered": null,
        "type": "br",
      },
      Object {
        "instance": null,
        "key": undefined,
        "nodeType": "host",
        "props": Object {
          "id": "test",
          "name": "test",
          "onChange": [MockFunction],
          "placeholder": "test",
          "required": true,
          "type": "text",
          "value": "test",
        },
        "ref": null,
        "rendered": null,
        "type": "input",
      },
    ],
    "type": "p",
  },
  Symbol(enzyme.__nodes__): Array [
    Object {
      "instance": null,
      "key": undefined,
      "nodeType": "host",
      "props": Object {
        "children": Array [
          <label
            htmlFor="test"
          >
            test
          </label>,
          <br />,
          <input
            id="test"
            name="test"
            onChange={[MockFunction]}
            placeholder="test"
            required={true}
            type="text"
            value="test"
          />,
        ],
      },
      "ref": null,
      "rendered": Array [
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "host",
          "props": Object {
            "children": "test",
            "htmlFor": "test",
          },
          "ref": null,
          "rendered": "test",
          "type": "label",
        },
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "host",
          "props": Object {},
          "ref": null,
          "rendered": null,
          "type": "br",
        },
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "host",
          "props": Object {
            "id": "test",
            "name": "test",
            "onChange": [MockFunction],
            "placeholder": "test",
            "required": true,
            "type": "text",
            "value": "test",
          },
          "ref": null,
          "rendered": null,
          "type": "input",
        },
      ],
      "type": "p",
    },
  ],
  Symbol(enzyme.__options__): Object {
    "adapter": ReactSixteenAdapter {
      "options": Object {
        "enableComponentDidUpdateOnSetState": true,
      },
    },
  },
}
`;
